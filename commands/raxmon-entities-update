#!/usr/bin/env python
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import optparse

from raxmon_cli.common import run_action
from raxmon_cli.utils import str_to_dict

OPTIONS = [
    [['--id'], {'dest': 'id', 'help': 'Entity id'}],
    [['--label'], {'dest': 'label', 'help': 'Entity label'}],
    [['--ip-addresses'], {'dest': 'ip_addresses', 'help': 'Entity IP addresses'}],
    [['--metadata'], {'dest': 'metadata', 'help': 'Entity metadata'}],
    [['--agent-id'], {'dest': 'agent_id', 'help': 'Entity agent ID'}]
]

REQUIRED_OPTIONS = ['id']

def callback(driver, options, args, callback):
    en = driver.get_entity(entity_id=options.id)
    data = {}

    for key in ['label', 'ip_addresses', 'metadata', 'agent_id']:
        value = getattr(options, key, None)
        if value is not None:
            if key in ['ip_addresses', 'metadata']:
                value = str_to_dict(value)

            data[key] = value

    result = driver.update_entity(entity=en,
                                  data=data,
                                  who=options.who,
                                  why=options.why)

    callback(result)

run_action(OPTIONS, REQUIRED_OPTIONS, 'entities', 'update', callback)
