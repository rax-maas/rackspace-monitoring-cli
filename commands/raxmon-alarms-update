#!/usr/bin/env python
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from raxmon_cli.common import run_action
from raxmon_cli.utils import instance_to_dict

OPTIONS = [
    [['--entity-id'], {'dest': 'entity_id', 'help': 'Parent Entity ID'}],
    [['--id'], {'dest': 'id', 'help': 'Alarm ID'}],
    [['--label'], {'dest': 'label', 'help': 'Alarm label'}],
    [['--check-id'], {'dest': 'check_id', 'help': 'Check ID'}],
    [['--criteria'], {'dest': 'criteria', 'help': 'Alarm criteria'}],
    [['--notification-plan-id'], {'dest': 'notification_plan_id', 'help': 'Notification plan id'}]
]

REQUIRED_OPTIONS = ['entity_id', 'id']

def callback(driver, options, args, callback):
    al = driver.get_alarm(entity_id=options.entity_id, alarm_id=options.id)
    keys = ['check_id', 'criteria', 'notification_plan_id']

    data = instance_to_dict(options, keys, False)
    result = driver.update_alarm(alarm=al, data=data,
                                 who=options.who,
                                 why=options.why)

    callback(result)

run_action(OPTIONS, REQUIRED_OPTIONS, 'alarms', 'update', callback)
